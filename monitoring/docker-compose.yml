version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: di-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - di-network

  grafana:
    image: grafana/grafana:latest
    container_name: di-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - di-network

  redis:
    image: redis:7-alpine
    container_name: di-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - di-network

  postgres:
    image: postgres:15-alpine
    container_name: di-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=di_platform
      - POSTGRES_USER=di_user
      - POSTGRES_PASSWORD=di_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - di-network

volumes:
  prometheus_data:
  grafana_data:
  redis_data:
  postgres_data:

networks:
  di-network:
    driver: bridge
